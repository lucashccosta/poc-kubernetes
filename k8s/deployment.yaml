apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-k8s
  namespace: default
  labels:
    app: poc-k8s
spec:
  selector:
    matchLabels:
      app: poc-k8s
  replicas: 2
  template:
    metadata:
      labels:
        app: poc-k8s
    spec:
      containers:
      - name: poc-k8s
        image: lucashccosta/poc-kubernetes-api:latest
        envFrom:
          - configMapRef:
              name: poc-k8s-env # configmap-env.yaml: metadata.name
          - secretRef:
              name: poc-k8s-secrets # secrets.yaml: metadata.name
        # env: 
        #   - name: VERSION
        #     valueFrom:
        #       configMapKeyRef:
        #         name: poc-k8s-env # configmap-env: metadata.name
        #         key: VERSION 
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        startupProbe: # identifica se a aplicação está pronta para receber requisições após o pod iniciar; após sucesso, libera readinessProbe e livenessProbe
          httpGet:
            path: /api/v1/health
            port: 9080
          periodSeconds: 3
          failureThreshold: 30 # 90s de verificação
        readinessProbe: # retira tráfego de requisições do pod em caso de falha
          httpGet:
            path: /api/v1/health
            port: 9080
          periodSeconds: 3
          failureThreshold: 1
          timeoutSeconds: 1
          successThreshold: 1
        livenessProbe: # identifica se aplicação está saudável (respondendo com sucesso); recria o container em caso de falha
          httpGet:
            path: /api/v1/health
            port: 9080
          periodSeconds: 5
          failureThreshold: 1
          timeoutSeconds: 1
          successThreshold: 1
        ports:
        - containerPort: 9080